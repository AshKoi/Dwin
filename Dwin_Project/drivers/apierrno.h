/***************************************************************
****************************************************************/
#ifndef _ERRORNO_HEADER_
#define _ERRORNO_HEADER_

#define ERRORNO_BASE				0x80000000
//#define ERROR(x)					((x)&ERRORNO_BASE)

/* RTC error code */
#define RTC_ERROR_BASE				0x100
#define RTC_SUCC					0
#define RTC_ERROR_INIT				(ERRORNO_BASE+RTC_ERROR_BASE+1)
#define RTC_ERROR_ARGUMENTS			(ERRORNO_BASE+RTC_ERROR_BASE+2)
#define RTC_ERROR_TIMEOUT			(ERRORNO_BASE+RTC_ERROR_BASE+3)
#define RTC_ERROR_STATUS_READ		(ERRORNO_BASE+RTC_ERROR_BASE+4)
#define RTC_ERROR_STATUS_WRITE		(ERRORNO_BASE+RTC_ERROR_BASE+5)
#define RTC_ERROR_TIME_READ			(ERRORNO_BASE+RTC_ERROR_BASE+6)
#define RTC_ERROR_TIME_WRITE		(ERRORNO_BASE+RTC_ERROR_BASE+7)
#define RTC_ERROR_POWERDOWN			(ERRORNO_BASE+RTC_ERROR_BASE+8)
#define RTC_ERROR_TEMP_READ			(ERRORNO_BASE+RTC_ERROR_BASE+9)

/* WatchDog error code */
#define WATCHDOG_ERROR_BASE			0x200
#define WATCHDOG_SUCC				0
#define WATCHDOG_ERROR_INIT			(ERRORNO_BASE+WATCHDOG_ERROR_BASE+1)
#define WATCHDOG_ERROR_ARGUMENTS	(ERRORNO_BASE+WATCHDOG_ERROR_BASE+2)
#define WATCHDOG_ERROR_TIMEOUT		(ERRORNO_BASE+WATCHDOG_ERROR_BASE+3)

/* LCD error code */
#define LCD_ERROR_BASE				0x300
#define LCD_SUCC					0
#define LCD_ERROR_INIT				(ERRORNO_BASE+LCD_ERROR_BASE+1)
#define LCD_ERROR_ARGUMENTS			(ERRORNO_BASE+LCD_ERROR_BASE+2)
#define LCD_ERROR_TIMEOUT			(ERRORNO_BASE+LCD_ERROR_BASE+3)

/* UART error code */
#define UART_ERROR_BASE				0x400
#define UART_SUCC					0
#define UART_ERROR_INIT				(ERRORNO_BASE+UART_ERROR_BASE+1)
#define UART_ERROR_ARGUMENTS		(ERRORNO_BASE+UART_ERROR_BASE+2)
#define UART_ERROR_TIMEOUT			(ERRORNO_BASE+UART_ERROR_BASE+3)
#define UART_ERROR_NOT_EXIST		(ERRORNO_BASE+UART_ERROR_BASE+4)
#define UART_ERROR_OPEN				(ERRORNO_BASE+UART_ERROR_BASE+5)
#define UART_ERROR_CLOSE			(ERRORNO_BASE+UART_ERROR_BASE+6)
#define UART_ERROR_WRITE			(ERRORNO_BASE+UART_ERROR_BASE+7)
#define UART_ERROR_READ				(ERRORNO_BASE+UART_ERROR_BASE+8)
#define UART_ERROR_PENDING			(ERRORNO_BASE+UART_ERROR_BASE+9)

/* FLASH */
#define FLASH_ERROR_BASE			0x500
#define FLASH_SUCC					0
#define FLASH_ERROR_INIT			(ERRORNO_BASE+FLASH_ERROR_BASE+1)
#define FLASH_ERROR_ARGUMENTS		(ERRORNO_BASE+FLASH_ERROR_BASE+2)
#define FLASH_ERROR_TIMEOUT			(ERRORNO_BASE+FLASH_ERROR_BASE+3)
#define FLASH_ERROR_ID				(ERRORNO_BASE+FLASH_ERROR_BASE+4)

/* EEPROM */
#define EEPROM_ERROR_BASE			0x600
#define EEPROM_SUCC					0
#define EEPROM_ERROR_INIT			(ERRORNO_BASE+EEPROM_ERROR_BASE+1)
#define EEPROM_ERROR_ARGUMENTS		(ERRORNO_BASE+EEPROM_ERROR_BASE+2)
#define EEPROM_ERROR_TIMEOUT		(ERRORNO_BASE+EEPROM_ERROR_BASE+3)

/* FRAM */
#define FRAM_ERROR_BASE				0x700
#define FRAM_SUCC					0
#define FRAM_ERROR_INIT				(ERRORNO_BASE+FRAM_ERROR_BASE+1)
#define FRAM_ERROR_ARGUMENTS		(ERRORNO_BASE+FRAM_ERROR_BASE+2)
#define FRAM_ERROR_TIMEOUT			(ERRORNO_BASE+FRAM_ERROR_BASE+3)
#define FRAM_ERROR_READ				(ERRORNO_BASE+FRAM_ERROR_BASE+4)

/* TIMER */
#define TIMER_ERROR_BASE			0x800
#define TIMER_SUCC					0
#define TIMER_ERROR_INIT			(ERRORNO_BASE+TIMER_ERROR_BASE+1)
#define TIMER_ERROR_ARGUMENTS		(ERRORNO_BASE+TIMER_ERROR_BASE+2)
#define TIMER_ERROR_TIMEOUT			(ERRORNO_BASE+TIMER_ERROR_BASE+3)
#define TIMER_ERROR_CHANNEL			(ERRORNO_BASE+TIMER_ERROR_BASE+4)
#define TIMER_ERROR_PRIO			(ERRORNO_BASE+TIMER_ERROR_BASE+5)
#define TIMER_ERROR_ISR				(ERRORNO_BASE+TIMER_ERROR_BASE+6)

/* ZLIB */
#define ZLIB_ERROR_BASE				0x900
#define ZLIB_SUCC					0
#define ZLIB_ERROR_INIT				(ERRORNO_BASE+ZLIB_ERROR_BASE+1)
#define ZLIB_ERROR_ARGUMENTS		(ERRORNO_BASE+ZLIB_ERROR_BASE+2)
#define ZLIB_ERROR_TIMEOUT			(ERRORNO_BASE+ZLIB_ERROR_BASE+3)
#define ZLIB_COMPRESS_ERROR			(ERRORNO_BASE+ZLIB_ERROR_BASE+4)
#define ZLIB_UNCOMPRESS_ERROR		(ERRORNO_BASE+ZLIB_ERROR_BASE+5)

/* USB Host */
#define USB_ERROR_BASE				0xA00
#define USB_SUCC					0
#define USB_ERROR_INIT				(ERRORNO_BASE+USB_ERROR_BASE+1)
#define USB_ERROR_ARGUMENTS			(ERRORNO_BASE+USB_ERROR_BASE+2)
#define USB_ERROR_TIMEOUT			(ERRORNO_BASE+USB_ERROR_BASE+3)
#define USB_ERROR_HANDLE			(ERRORNO_BASE+USB_ERROR_BASE+4)
#define USB_ERROR_OPEN				(ERRORNO_BASE+USB_ERROR_BASE+5)
#define USB_ERROR_OPEN_MAX_REACHED	(ERRORNO_BASE+USB_ERROR_BASE+6)
#define USB_ERROR_WRITE				(ERRORNO_BASE+USB_ERROR_BASE+7)
#define USB_ERROR_READ				(ERRORNO_BASE+USB_ERROR_BASE+8)
#define USB_ERROR_CLOSE				(ERRORNO_BASE+USB_ERROR_BASE+9)

/* EMAC */
#define EMAC_ERROR_BASE				0xB00
#define EMAC_SUCC					0
#define EMAC_ERROR_INIT				(ERRORNO_BASE+EMAC_ERROR_BASE+1)
#define EMAC_ERROR_ARGUMENTS		(ERRORNO_BASE+EMAC_ERROR_BASE+2)
#define EMAC_ERROR_TIMEOUT			(ERRORNO_BASE+EMAC_ERROR_BASE+3)

/* RN8209 */
#define RN8209_ERROR_BASE			0xC00
#define RN8209_SUCC					0
#define RN8209_ERROR_INIT			(ERRORNO_BASE+RN8209_ERROR_BASE+1)
#define RN8209_ERROR_ARGUMENTS		(ERRORNO_BASE+RN8209_ERROR_BASE+2)
#define RN8209_ERROR_TIMEOUT		(ERRORNO_BASE+RN8209_ERROR_BASE+3)

/* ADC */
#define ADC_ERROR_BASE				0xD00
#define ADC_SUCC					0
#define ADC_ERROR_INIT				(ERRORNO_BASE+ADC_ERROR_BASE+1)
#define ADC_ERROR_ARGUMENTS			(ERRORNO_BASE+ADC_ERROR_BASE+2)
#define ADC_ERROR_TIMEOUT			(ERRORNO_BASE+ADC_ERROR_BASE+3)

/* ISO7816 */
#define ISO7816_ERROR_BASE			0xE00
#define ISO7816_SUCC				0
#define ISO7816_ERROR_INIT			(ERRORNO_BASE+ISO7816_ERROR_BASE+1)
#define ISO7816_ERROR_ARGUMENTS		(ERRORNO_BASE+ISO7816_ERROR_BASE+2)
#define ISO7816_ERROR_TIMEOUT		(ERRORNO_BASE+ISO7816_ERROR_BASE+3)
#define ISO7816_ERROR_EXEC			(ERRORNO_BASE+ISO7816_ERROR_BASE+4)

/* AUDIO */
#define AUDIO_ERROR_BASE			0xF00
#define AUDIO_SUCC					0
#define AUDIO_ERROR_INIT			(ERRORNO_BASE+AUDIO_ERROR_BASE+1)
#define AUDIO_ERROR_ARGUMENTS		(ERRORNO_BASE+AUDIO_ERROR_BASE+2)
#define AUDIO_ERROR_TIMEOUT			(ERRORNO_BASE+AUDIO_ERROR_BASE+3)

/* MISC */
#define UPGRADE_ERROR_BASE			0x1000
#define UPGRADE_SUCC				0
#define UPGRADE_ERROR_INIT			(ERRORNO_BASE+UPGRADE_ERROR_BASE+1)
#define UPGRADE_ERROR_ARGUMENTS		(ERRORNO_BASE+UPGRADE_ERROR_BASE+2)
#define UPGRADE_ERROR_TIMEOUT		(ERRORNO_BASE+UPGRADE_ERROR_BASE+3)
#define UPGRADE_ERROR_BOOTFLAG		(ERRORNO_BASE+UPGRADE_ERROR_BASE+4)
#define UPGRADE_ERROR_HEADER_READ	(ERRORNO_BASE+UPGRADE_ERROR_BASE+5)
#define UPGRADE_ERROR_HEADER_CRC	(ERRORNO_BASE+UPGRADE_ERROR_BASE+6)
#define UPGRADE_ERROR_ZIP_READ		(ERRORNO_BASE+UPGRADE_ERROR_BASE+7)
#define UPGRADE_ERROR_ZIP_CRC		(ERRORNO_BASE+UPGRADE_ERROR_BASE+8)
#define UPGRADE_ERROR_UNZIP			(ERRORNO_BASE+UPGRADE_ERROR_BASE+9)
#define UPGRADE_ERROR_UNZIP_LEN		(ERRORNO_BASE+UPGRADE_ERROR_BASE+10)
#define UPGRADE_ERROR_UNZIP_CRC		(ERRORNO_BASE+UPGRADE_ERROR_BASE+11)
#define UPGRADE_ERROR_UNZIP_WRITE	(ERRORNO_BASE+UPGRADE_ERROR_BASE+12)
#define UPGRADE_ERROR_COMPARE_LEN	(ERRORNO_BASE+UPGRADE_ERROR_BASE+13)
#define UPGRADE_ERROR_COMPARE_CRC	(ERRORNO_BASE+UPGRADE_ERROR_BASE+14)
#define UPGRADE_ERROR_FLAG_WRITE	(ERRORNO_BASE+UPGRADE_ERROR_BASE+15)
#define UPGRADE_ERROR_FLAG_READ		(ERRORNO_BASE+UPGRADE_ERROR_BASE+16)
#define UPGRADE_ERROR_FLAG_VERIFY	(ERRORNO_BASE+UPGRADE_ERROR_BASE+17)
#define UPGRADE_ERROR_OUT_OF_ADDR	(ERRORNO_BASE+UPGRADE_ERROR_BASE+18)
#endif
